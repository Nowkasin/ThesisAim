//
//  SleepScheduleView.swift
//  BeActive
//
//  Created by Kasin Thappawan on 19/3/2568 BE.
//

import SwiftUI

struct SleepScheduleView: View {
    @State private var wakeUpTime = Date()
    @State private var bedTime = Date()
    
    var alertsManager = AlertsManager() // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ AlertsManager
    @Environment(\.presentationMode) var presentationMode // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ View
// ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö‡∏•‡∏á DataBase ‡∏î‡πâ‡∏ß‡∏¢
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                Text("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏∑‡πà‡∏ô & ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô")
                    .font(.title)
                    .bold()
                    .padding(.top, 20)

                Form {
                    Section(header: Text("‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏∑‡πà‡∏ô").font(.headline)) {
                        HStack {
                            Image(systemName: "sunrise.fill")
                                .foregroundColor(.orange)
                            DatePicker("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏∑‡πà‡∏ô", selection: $wakeUpTime, displayedComponents: .hourAndMinute)
                                .labelsHidden()
                        }
                    }
                    
                    Section(header: Text("üåô ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô").font(.headline)) {
                        HStack {
                            Image(systemName: "moon.fill")
                                .foregroundColor(.purple)
                            DatePicker("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô", selection: $bedTime, displayedComponents: .hourAndMinute)
                                .labelsHidden()
                        }
                    }
                }
                .background(Color(.systemGroupedBackground))
                .cornerRadius(10)
                .padding(.horizontal)
                
                Spacer()

                // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ
                Button(action: saveSettings) {
                    HStack {
                        Image(systemName: "checkmark.circle.fill")
                            .font(.title2)
                        Text("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
                            .font(.title2)
                            .bold()
                    }
                    .frame(maxWidth: .infinity)
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                    .padding(.horizontal)
                }

                Spacer()
            }
            .background(Color(.systemGroupedBackground))
            
            .navigationBarItems(
                leading: Button(action: { presentationMode.wrappedValue.dismiss() }) {
                    Image(systemName: "xmark.circle.fill")
                        .font(.title2)
                        .foregroundColor(.gray)
                }
            ) // ‚úÖ ‡∏õ‡∏∏‡πà‡∏° X ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤
        }
    }

    // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ
    func saveSettings() {
        let calendar = Calendar.current
        let wakeUpComponents = calendar.dateComponents([.hour, .minute], from: wakeUpTime)
        let bedTimeComponents = calendar.dateComponents([.hour, .minute], from: bedTime)
        
        // ‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà AlertsManager ‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
        alertsManager.setWakeUpAndBedTime(wakeUp: wakeUpComponents, bed: bedTimeComponents, interval: 1)
        
        print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà: ‡∏ï‡∏∑‡πà‡∏ô \(wakeUpComponents.hour ?? 0):\(wakeUpComponents.minute ?? 0), ‡∏ô‡∏≠‡∏ô \(bedTimeComponents.hour ?? 0):\(bedTimeComponents.minute ?? 0), ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏°.")
        
        // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à
        presentationMode.wrappedValue.dismiss()
    }
}

struct SleepScheduleView_Previews: PreviewProvider {
    static var previews: some View {
        SleepScheduleView()
    }
}
