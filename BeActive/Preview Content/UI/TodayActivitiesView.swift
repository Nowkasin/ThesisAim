//
//  TodayActivitiesView.swift
//  BeActive
//
//  Created by Kasin Thappawan on 13/2/2568 BE.
//

import SwiftUI

struct TodayActivitiesView: View {
    @EnvironmentObject var manager: HealthManager
    var textColor: Color

    var body: some View {
        VStack(alignment: .leading) {
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 10) {
                    ForEach(manager.activities.sorted(by: { $0.value.id < $1.value.id }), id: \.key) { item in
                        NavigationLink(destination: destinationView(for: item.value)) {
                            ActivityCard(activity: item.value)
                                .frame(width: 200, height: 180)
                        }
                        .onAppear {
                            print("üìå Loading ActivityCard for: \(item.value.titleKey)") // ‚úÖ Debugging Print ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                        }
                    }
                }
                .padding(.horizontal)
            }
        }
    }

    private func destinationView(for activity: Activity) -> some View {
        let titleKey = activity.titleKey.lowercased() // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏á‡πà‡∏≤‡∏¢
        let todayHeartRateKey = t("Today Heart Rate", in: "Chart_screen").lowercased() // ‚úÖ ‡πÉ‡∏ä‡πâ `.lowercased()` ‡∏î‡πâ‡∏ß‡∏¢
        let todayStepsKey = t("Today Steps", in: "Chart_screen").lowercased() // ‚úÖ ‡πÉ‡∏ä‡πâ `.lowercased()` ‡∏î‡πâ‡∏ß‡∏¢
        let todaycal = t("Today Calories", in: "Chart_screen").lowercased()
        let todaydistance = t("Today's Distance", in: "Chart_screen").lowercased()

        print("üìå Navigating to: \(activity.titleKey)") // ‚úÖ Debugging Print
        print("üîç Expected Heart Rate Key: \(todayHeartRateKey)")
        print("üîç Expected Steps Key: \(todayStepsKey)")

        if titleKey == todayHeartRateKey {
            return AnyView(HeartChartView(activity: activity)) // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
        } else if titleKey == todayStepsKey {
            return AnyView(StepChartView(activity: activity)) // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
        } else if titleKey == todaycal {
            return AnyView(CalChartView(activity: activity)) // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
        } else if titleKey == todaydistance {
            return AnyView(DistanceChartView(activity: activity)) // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
        } else {
            return AnyView(Text("üö® Error: Unknown Activity (\(activity.titleKey))")) // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Error ‡∏ñ‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        }
    }
}

